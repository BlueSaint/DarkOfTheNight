package Escaper

import Client
import Slider
import EscaperPickerObj
import LinkedList

// ---------------

public class Escaper
	unit u
	EscaperPicker picker
	function exists() returns boolean
		return u!=null
	function initialize()
		u	= null
	construct()
		error("Please do not instanciate this class")

// ---------------

public function Escaper.iterator() returns EscaperIterator
	return new EscaperIterator()
		
public constant Escaper escapers	= null
		
class EscaperIterator
	LLIterator<Client> iterator
	construct()
		this.iterator	= clients.iterator()
	function hasNext() returns boolean
		return iterator.hasNext()
	function next() returns Escaper
		return iterator.next().escaper()
	function close()
		destroy this
	ondestroy
		iterator.close()

// ---------------

public function Escaper.owner() returns Client
	return this castTo int castTo Client

public function Client.escaper() returns Escaper
	return this castTo int castTo Escaper
	
public function Escaper.slider() returns Slider
	return Slider.fromUnit(this.u)
	
public function Slider.escaper() returns Escaper
	for e in escapers
		if e.slider()==this
			return e
	error("Slider/Escaper structure is corrupt")
	return null

// --------------- 

init
	Client.evOnCreate.register((int c) -> begin
		(c castTo Escaper).initialize()
	end)
	Client.evOnAnyDestroy.register((int c) -> begin
		destroy c castTo Escaper
	end)