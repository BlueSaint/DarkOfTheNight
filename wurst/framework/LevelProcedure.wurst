package LevelProcedure

/*	this is the most important part of
	the framework; the level procedure	*/

import Level
import Slider
import LevelRoll
import Client
import Escaper
import LevelWaker
import EscaperObj
import EscaperPickerObj

// ---------------

interface ContinueFunc
	function run() returns Level

constant ContinueFunc continueWanted	= ()->LevelRoll.continueWanted()
constant ContinueFunc continueRest		= ()->LevelRoll.continueRest()

ContinueFunc currentContinueFunc

// ---------------

int levelcount	= 0
Level level

/**	starts the next level in rotation */
function continueLevelProcedure()
	level		= currentContinueFunc.run()
	levelcount++
	if level==null
		if currentContinueFunc==continueWanted
			currentContinueFunc=continueRest
			continueLevelProcedure()
		else
			Client.lcl.print("|cffffff00The level pool is empty",60)
		return
	level.wake()
	
	for e in escapers
		if e.exists()
			e.u.setPos(level.getSpawnPos(e.owner()))
		else
			e.picker		= new EscaperPicker(e.owner().p,level.getSpawnPos(e.owner()))
			e.u				= e.picker.u
			e.picker.evOnPick.register((EscaperObj o) -> begin
				if e.owner().isLocal()
					Client.lcl.print("You picked "+o.getStr(),25)
				else
					Client.lcl.print(e.owner().p.getNameColored()+" picked "+o.getStr(),25)
				e.u			= createUnit(e.owner().p,o.id,level.getSpawnPos(e.owner()),angle(270))
				..applyEscaperValues()
				e.owner().p.select(e.u)
				e.picker	= null
				print("creating for "+e.u.getName()+" - "+Slider.fromUnit(e.u) castTo int.toString())
				if Slider.create(e.u)!=e.slider()
					error("Slider/Escaper structure is corrupt")
			end)
			
	PanCameraToTimed(level.start.x,level.start.y,0)
	Client.lcl.print("Level |cffffaa00#"+levelcount.toString(),25)
	level.registerOnFinish(()->begin
		level.halt()
		continueLevelProcedure()
	end)

// ---------------

public function startLevelProcedure()
	currentContinueFunc		= continueWanted
	continueLevelProcedure()
	
	if bj_isSinglePlayer
		Slider.evOnDestroy.register((Slider s) -> begin
			let e		= s.escaper()
			e.u.revive(level.getSpawnPos(e.owner()),true)
			e.owner().p.select(e.u)
			if vec2(GetCameraTargetPositionX(),GetCameraTargetPositionY()).distToVec(level.start)>800
				PanCameraToTimed(level.start.x,level.start.y,0)
			if e.slider()!=Slider.create(e.u)
				error("Slider/Escaper structure is corrupt")
		end)
	else
		error("TODO MET")
	